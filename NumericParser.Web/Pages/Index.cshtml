@page
@model NumericParser.Web.Pages.IndexModel
@{
}

<!DOCTYPE html>
<html>
<head>
    <title>NumericParser - Flexible Numeric Parsing</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <link rel="icon" href="~/favicon.ico" type="image/x-icon" />
    <!-- This entire page, except current comment, was generated by GitHub Copilot. -->
    <style>
        #copyMessage {
            position: absolute;
            top: 0;
            left: 0;
            background-color: #d4edda;
            color: #155724;
            padding: 10px;
            border: 1px solid #c3e6cb;
            border-radius: 5px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1>Welcome to NumericParser</h1>
        <p class="lead">A simple .NET library for flexible parsing of numeric values stored in strings to decimal values with precision.</p>
        <p>Handles different formats like "1,111.11" or "2.222,22".</p>
        <a href="https://github.com/navferty/NumericParser" class="btn btn-secondary mb-3">GitHub</a>
        <a href="https://www.nuget.org/packages/NumericParser" class="btn btn-secondary mb-3">NuGet</a>
        <a href="/swagger" class="btn btn-primary mb-3">Go to Swagger UI</a>

        <form id="parseForm">
            <div class="form-group">
                <label for="inputValues">Paste your list of string values:</label>
                <textarea class="form-control" id="inputValues" rows="5" placeholder="e.g., 1,111.11&#10;2.222,22&#10;3,333.33"></textarea>
            </div>
            <div class="form-group form-check">
                <input type="checkbox" class="form-check-input" id="preferThousands">
                <label class="form-check-label" for="preferThousands">Prefer Thousands in Ambiguous Cases</label>
            </div>
            <button type="submit" class="btn btn-success">Parse</button>
        </form>

        <div id="results" class="mt-5" style="display:none;">
            <h2>Parsed Results</h2>
            <ul id="resultList" class="list-group mb-3"></ul>
            <div id="copyMessage">Copied to clipboard</div>
            <button id="copyButton" class="btn btn-secondary mb-2">Copy</button>
            <a id="downloadCsv" class="btn btn-info mb-2" href="#" download="results.csv">Download as CSV</a>
            <a id="downloadJson" class="btn btn-info mb-2" href="#" download="results.json">Download as JSON</a>
        </div>
    </div>

    <script>
        $(document).ready(function() {
            $('#parseForm').on('submit', function(event) {
                event.preventDefault();
                var inputValues = $('#inputValues').val().split('\n').map(s => s.trim()).filter(s => s.length > 0);
                var preferThousands = $('#preferThousands').is(':checked');

                $.ajax({
                    url: '/parse',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ source: inputValues, preferThousands: preferThousands }),
                    success: function(data) {
                        $('#resultList').empty();
                        var parsedValues = [];
                        data.forEach(function(item) {
                            if (item.error) {
                                $('#resultList').append('<li class="list-group-item text-danger">Error parsing "' + item.source + '": ' + item.error + '</li>');
                                parsedValues.push(item.error);
                            } else {
                                $('#resultList').append('<li class="list-group-item">' + item.value + '</li>');
                                parsedValues.push(item.value);
                            }
                        });
                        $('#results').show();

                        // Copy to clipboard
                        $('#copyButton').off('click').on('click', function() {
                            var text = parsedValues.join('\n');
                            navigator.clipboard.writeText(text).then(function() {
                                $('#copyMessage').fadeIn().delay(2000).fadeOut();
                            });
                        });

                        // Download as CSV
                        $('#downloadCsv').off('click').on('click', function() {
                            var csvContent = "data:text/csv;charset=utf-8," + parsedValues.join('\n');
                            $(this).attr('href', encodeURI(csvContent));
                        });

                        // Download as JSON
                        $('#downloadJson').off('click').on('click', function() {
                            var jsonContent = "data:application/json;charset=utf-8," + encodeURIComponent(JSON.stringify(data, null, 2));
                            $(this).attr('href', jsonContent);
                        });
                    },
                    error: function(xhr) {
                        if (xhr.status === 400 && xhr.responseJSON) {
                            var problemDetails = xhr.responseJSON;
                            alert('Error: ' + problemDetails.title + ' - ' + problemDetails.detail);
                        } else {
                            alert('Error parsing values');
                        }
                    }
                });
            });
        });
    </script>
</body>
</html>
